{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\Login.svelte"
  ],
  "sourcesContent": [
    "<!-- Script to implement varibales realted to login System GUI -->\n<!-- Checks If Inputs are empty -->\n<script> \n    \n    import LogintoAdmin from \"./Admin.svelte\";\n    let email = \"\";\n    let password = \"\";\n    let isLoading = false;\n    let isSuccess = false;\n    export let submit;\n    let errors = {};\n    const handleSubmit = () => {\n    errors = {};\n\n    if (email.length === 0) {\n      errors.email = \"empty\";\n    }\n    if (password.length === 0) {\n      errors.password = \"empty\";\n    }\n\n    if (Object.keys(errors).length === 0) {\n      isLoading = true;\n      submit({ email, password })\n        .then(() => {\n          isSuccess = true;\n          isLoading = false;\n        })\n        .catch(err => {\n          errors.server = err;\n          isLoading = false;\n        });\n    }\n  };\n</script>\n\n<!-- Implementation of the GUI of Login system -->\n<!-- form method produce the frame of the login GUI with the specfifications -->\n<!-- label method formats the labels and images of login GUI -->\n<!-- input method formats the display for email/passwarod inputs -->\n<!-- input:focus cleans up the outline of inputs -->\n<!-- button method produce the button with specfication below-->\n<!-- button:hover method puts in setting changes -->\n<!-- h1 method moves logo img to certain position -->\n<!-- .errors method  position error message if inputs are wrong-->\n<!-- .success method  position success method in position -->\n\n<style>\n    form {\n      background: #fff;\n      padding: 50px;\n      width: 250px;\n      height: 400px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      box-shadow: 0px 20px 14px 8px rgba(0, 0, 0, 0.58);\n      \n    }\n    \n\n    label {\n      margin: 10px 0;\n      align-self: flex-start;\n      font-weight: 500;\n    }\n\n    input {\n      border: none;\n      border-bottom: 1px solid #ccc;\n      margin-bottom: 20px;\n      transition: all 300ms ease-in-out;\n      width: 100%;\n    }\n\n    input:focus {\n      outline: 0;\n      border-bottom: 1px solid #666;\n    }\n\n    button {\n      margin-top: 1px;\n      background: black;\n      color: white;\n      padding: 10px 0;\n      width: 200px;\n      border-radius: 25px;\n      text-transform: uppercase;\n      font-weight: bold;\n      cursor: pointer;\n      transition: all 300ms ease-in-out;\n    }\n\n    button:hover {\n      transform: translateY(-2.5px);\n      box-shadow: 0px 1px 10px 0px rgba(0, 0, 0, 0.58);\n    }\n\n    h1 {\n      margin: 10px 20px 30px 20px;\n      font-size: 40px;\n      height: 100vh;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: linear-gradient(to right, #cd76e2, #e358ab);\n      }\n\n    \n  .errors {\n    list-style-type: none;\n    padding: 10px;\n    margin: 0;\n    border: 2px solid #be6283;\n    color: #be6283;\n    background: rgba(190, 98, 131, 0.3);\n  }\n\n  .success {\n    font-size: 24px;\n    text-align: center;\n  }\n</style>\n\n\n\n<!-- Button system check -->\n<!-- Checks if inputs are correct and are working correctly-->\n\n<form on:submit|preventDefault={handleSubmit}>\n  {#if email == 'Admin' && password == 'Admin'}\n    \n     <LogintoAdmin />\n    \n  {:else}\n    <h1>\n      <a href=\"https://www.gd.com/\">\n      <img src=\"https://media.glassdoor.com/sqll/276/general-dynamics-squarelogo.png\" alt=\"General Dynamics\" />\n    </h1>\n\n    <label>Email</label>\n    <input name=\"email\" placeholder=\"name@example.com\" bind:value={email} />\n\n    <label>Password</label>\n    <input name=\"password\" type=\"password\" bind:value={password} />\n\n    <button type=\"submit\">\n      {#if isLoading}Invalid{:else}Log in ðŸ”’{/if}\n    </button>\n\n    {#if Object.keys(errors).length > 0}\n      <ul class=\"errors\">\n        {#each Object.keys(errors) as field}\n          <li>{field}: {errors[field]}</li>\n        {/each}\n      </ul>\n    {/if}\n  {/if}\n</form>"
  ],
  "names": [],
  "mappings": "AAgDI,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AAEnD,CAAC,AAGD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,UAAU,CAAE,UAAU,CACtB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CACjC,KAAK,CAAE,IAAI,AACb,CAAC,AAED,mBAAK,MAAM,AAAC,CAAC,AACX,OAAO,CAAE,CAAC,CACV,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AAED,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,GAAG,CACf,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,IAAI,CACnB,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,AACnC,CAAC,AAED,oBAAM,MAAM,AAAC,CAAC,AACZ,SAAS,CAAE,WAAW,MAAM,CAAC,CAC7B,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AAClD,CAAC,AAED,EAAE,cAAC,CAAC,AACF,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC3B,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,AACvD,CAAC,AAGL,OAAO,cAAC,CAAC,AACP,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACrC,CAAC"
}